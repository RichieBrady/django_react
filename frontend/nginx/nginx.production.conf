# Set the user and group to run Nginx
user nginx;
worker_processes auto;

# Set the number of file descriptors
events {
  worker_connections 1024;
}

# Configure HTTP server
http {
  # Set the MIME type mappings
  include mime.types;

  # Set the default log format
  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

  # Set the access log path
  access_log /var/log/nginx/access.log main;

  # Set the error log path
  error_log /var/log/nginx/error.log;

  # Enable gzip compression
  gzip on;
  gzip_comp_level 5;
  gzip_min_length 256;
  gzip_proxied any;
  gzip_types application/javascript application/json text/css text/plain text/xml;

  # Enable caching
  open_file_cache max=1000 inactive=20s;
  open_file_cache_valid 30s;
  open_file_cache_min_uses 2;
  open_file_cache_errors off;

  # SSL configuration
  ssl_certificate /etc/nginx/ssl/certificate.crt;
  ssl_certificate_key /etc/nginx/ssl/private.key;

  # Redirect HTTP to HTTPS
  server {
    listen 80;
    server_name frontend;
    return 301 https://$host$request_uri;
  }

  # Configure HTTPS server
  server {
    listen 443 ssl http2;
    server_name frontend;

    root /usr/share/nginx/html;
    index index.html;

    # Enable SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    # Enable OCSP stapling
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;

    # Enable strict transport security
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Set the location for static files (if any)
    location /static/ {
      alias /path/to/static/files/;
      expires max;
      access_log off;
    }

    # Set the location for media files (if any)
    location /media/ {
      alias /path/to/media/files/;
      expires max;
      access_log off;
    }

    location / {
      try_files $uri /index.html;
    }

    # Set additional proxy headers (if needed)
    # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    # proxy_set_header X-Forwarded-Proto $scheme;

    # Set proxy headers for the Django API backend
    location /api/ {
      proxy_pass http://backend:8000;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_redirect off;
    }
  }
}